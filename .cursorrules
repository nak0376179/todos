# .cursorrules

## 技術選定・運用

### フロントエンド
- React + Vite + SWC + MUI + Vitest + Storybook + Tanstack Query + Jotai + axios
- ルーティングはreact-router v7（Declarative Mode）
- axiosのbaseURLや共通ヘッダはhooks/api/fetcher.tsで一元管理
- 型インポートはimport typeで統一
- API型・CRUD関数・tanstack queryフックはhooks/apiで集約
- MUIのThemeProviderとNoto Sans JPフォントを全体に適用
- backend APIの型・エラーレスポンスに合わせてフロントも型定義
- pages配下のファイル名・パスはNext.js互換を意識
- Storybook/テスト/開発用のAPIモックはMSW v2（httpハンドラ）で統一
- Prettierはセミコロンなし・シングルクオート・printWidth 120で統一
- 依存はfrontendディレクトリ内で管理（外部グローバルインストール禁止）
- テスト・ストーリーもESLintでlint（plugin:vitest/recommended, plugin:storybook/recommended）
- APIレスポンスはItemsResponse/MessageResponse型で統一し、テスト・StorybookのMSWモックも同じ形式で返す

### バックエンド
- poetry+pyenvでFastAPI+Mangum+pydantic
- LambdaデプロイはAWS SAM（zip形式）で行う
- LocalStack（docker）をlocal環境で起動し、開発・テスト用のDynamoDB等として利用する
- ruff, blackを導入し、Makefileで一括実行できるようにする
- pytestで日本語関数名テスト
- 型・エラー型はフロントと揃える
- models（DB・永続化層の型）とschemas（API入出力用スキーマ）は分離
- APIレスポンスはItemsResponse/MessageResponse型で統一

### インフラ・共通
- LocalStack（docker）をlocal環境で起動し、開発・テスト用のDynamoDB等として利用する
- .pytest_cache, .mypy_cache, __pycache__は.gitignoreとVSCodeで非表示

## ディレクトリ・構成ルール
- frontend/src/components: UIコンポーネントを配置
- frontend/src/hooks/api: APIクライアント・型・カスタムフックを配置
- frontend/src/layouts: レイアウト用コンポーネントを配置
- frontend/src/pages: Next.js風にパスごとにページを配置（中身はcomponentsで実装）
- backend/app/models: DB・永続化層の型を配置
- backend/app/schemas: API入出力用のPydanticスキーマを配置
- backend/app/api: FastAPIのルータを配置
- backend/app/repositories, backend/app/services: リポジトリ・サービス層

## テスト・Storybook・モック
- フロントエンドのテストはVitest＋Testing Libraryで作成
- Storybookストーリー・VitestテストともにMSW v2（httpハンドラ）でAPIモック
- テスト・ストーリーもESLintでlint（plugin:vitest/recommended, plugin:storybook/recommended）
- QueryClientProviderはテスト・Storybook両方で必ずラップ
- vi.spyOn等の手動フックモックは原則禁止、API通信はMSWで統一


## Lint・整形・依存
- Prettierはセミコロンなし・シングルクオート・printWidth 120で統一
- ESLintはテスト・ストーリーも含めて一元管理
- ruffで保存時自動整形
- 依存はfrontendディレクトリ内で管理（外部グローバルインストール禁止）
- .envやAPI_BASE_URLの指定ミスに注意
- backendとAPI型・エラー型を揃える

## 注意点
- ディレクトリ作成やコマンド実行は必ずプロジェクトルートで行う
- importパスの重複や循環参照に注意
- linterエラー（型インポート等）は都度修正
- .envやAPI_BASE_URLの指定ミスに注意
- backendとAPI型・エラー型を揃える
 